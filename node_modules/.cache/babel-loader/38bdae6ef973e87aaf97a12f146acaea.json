{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(url).then(res => {\n        if (!res.ok) {\n          throw Error('Could not fetch the data for that resource');\n        }\n\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setIsPending(false);\n        setError(null);\n      }).catch(err => {\n        setIsPending(false);\n        setError(err.message);\n      });\n    }, 1000);\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\n\nexport default useEffect;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/latihan-2/src/useFetch.js"],"names":["useEffect","useState","useFetch","url","data","setData","isPending","setIsPending","error","setError","setTimeout","fetch","then","res","ok","Error","json","catch","err","message"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAQ;AAAA;;AAErB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVU,IAAAA,UAAU,CAAC,MAAK;AACZC,MAAAA,KAAK,CAACR,GAAD,CAAL,CACHS,IADG,CACEC,GAAG,IAAI;AACT,YAAG,CAACA,GAAG,CAACC,EAAR,EAAW;AACP,gBAAMC,KAAK,CAAC,4CAAD,CAAX;AACH;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,OANG,EAOHJ,IAPG,CAOER,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAXG,EAYHQ,KAZG,CAYGC,GAAG,IAAG;AACTX,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAACS,GAAG,CAACC,OAAL,CAAR;AACH,OAfG;AAgBH,KAjBS,EAiBP,IAjBO,CAAV;AAkBH,GAnBQ,EAmBN,CAAChB,GAAD,CAnBM,CAAT;AAqBA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA;AAAnB,GAAP;AAEH,CA7BD;;GAAMN,Q;;AA+BN,eAAeF,SAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = (url) =>{\r\n\r\n    const [data, setData] = useState(null);\r\n    const [isPending, setIsPending] = useState(true)\r\n    const [error, setError] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        setTimeout(() =>{\r\n            fetch(url)\r\n        .then(res => {\r\n            if(!res.ok){\r\n                throw Error('Could not fetch the data for that resource')\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setData(data)\r\n            setIsPending(false)\r\n            setError(null)\r\n        })\r\n        .catch(err =>{\r\n            setIsPending(false)\r\n            setError(err.message)\r\n        })\r\n        }, 1000)\r\n    }, [url])\r\n\r\n    return { data, isPending, error }\r\n\r\n}\r\n\r\nexport default useEffect;"]},"metadata":{},"sourceType":"module"}